
heap.c,1020
struct heap_node 8,99
  heap_node_t *next;next9,118
  heap_node_t *prev;prev10,139
  heap_node_t *parent;parent11,160
  heap_node_t *child;child12,183
  void *datum;datum13,205
  uint32_t degree;14,220
  uint32_t mark;15,239
#define swap(18,260
#define splice_heap_node_lists(24,372
#define insert_heap_node_in_list(33,684
#define remove_heap_node_from_list(40,908
void print_heap_node(45,1041
void print_heap(61,1363
void print_heap_node_list(78,1665
void heap_init(94,1864
void heap_node_delete(104,2100
void heap_delete(122,2404
heap_node_t *heap_insert(heap_insert133,2569
void *heap_peek_min(heap_peek_min153,2895
static void heap_link(158,2971
static void heap_consolidate(172,3293
void *heap_remove_min(heap_remove_min213,4226
int heap_combine(248,4760
static void heap_cut(277,5411
static void heap_cascading_cut(291,5692
int heap_decrease_key(305,5918
int heap_decrease_key_no_replace(319,6160
int32_t compare(343,6734
char *print_int(print_int348,6833
int main(357,6951

heap.h,245
# define HEAP_H2,15
typedef struct heap_node heap_node_t;11,114
typedef struct heap 13,153
  heap_node_t *min;min14,175
  uint32_t size;15,195
  int32_t (*compare)compare16,212
  void (*datum_delete)datum_delete17,269
} heap_t;18,301

rlg327.c,2346
# define rand_under(17,358
# define rand_range(21,501
# define UNUSED(22,574
#define malloc(24,605
typedef struct corridor_path 30,749
  heap_node_t *hn;hn31,780
  uint8_t pos[pos32,799
  uint8_t from[from33,817
  int32_t cost;34,836
} corridor_path_t;35,852
typedef enum dim 37,872
  dim_x,38,891
  dim_y,39,900
  num_dims40,909
} dim_t;41,920
typedef int16_t pair_t[pair_t43,930
#define DUNGEON_X 45,965
#define DUNGEON_Y 46,999
#define MIN_ROOMS 47,1033
#define MAX_ROOMS 48,1066
#define ROOM_MIN_X 49,1100
#define ROOM_MIN_Y 50,1133
#define ROOM_MAX_X 51,1166
#define ROOM_MAX_Y 52,1200
#define mappair(54,1235
#define mapxy(55,1292
#define hardnesspair(56,1327
#define hardnessxy(57,1394
typedef enum __attribute__ ((__packed__)) terrain_type 59,1440
  ter_debug,60,1497
  ter_wall,61,1510
  ter_wall_immutable,62,1522
  ter_floor,63,1544
  ter_floor_room,64,1557
  ter_floor_hall,65,1575
  ter_stairs,66,1593
  ter_stairs_up,67,1607
  ter_stairs_down,68,1624
  ter_pc69,1643
} terrain_type_t;70,1652
typedef struct room 72,1671
  pair_t position;73,1693
  pair_t size;74,1712
} room_t;75,1727
typedef struct dungeon 77,1738
  uint32_t num_rooms;78,1763
  room_t *rooms;rooms80,1814
  terrain_type_t map[map81,1831
  uint8_t hardness[hardness90,2484
} dungeon_t;91,2526
static uint32_t in_room(93,2540
static uint32_t adjacent_to_room(109,2931
static uint32_t is_open_space(117,3192
static int32_t corridor_path_cmp(122,3291
static void dijkstra_corridor(126,3441
static void dijkstra_corridor_inv(225,7178
#define hardnesspair_inv(278,8500
static int connect_two_rooms(328,11171
static int create_cycle(347,11823
static int connect_rooms(389,13388
int gaussian[gaussian402,13581
typedef struct queue_node 410,13737
  int x,411,13765
  int x, y;411,13765
  struct queue_node *next;next412,13777
} queue_node_t;413,13804
static int smooth_hardness(415,13821
static int empty_dungeon(569,17995
static int place_rooms(588,18371
static void place_stairs(625,19558
static int allocate_rooms(647,20193
static void destroy_rooms(656,20329
static int make_rooms(661,20392
int gen_dungeon(688,21018
void render_dungeon(701,21180
void delete_dungeon(743,22062
void init_dungeon(748,22121
int load_dungeon(753,22178
int save_dungeon(984,27415
int main(1173,31726
