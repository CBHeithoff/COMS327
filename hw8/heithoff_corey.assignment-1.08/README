Assignment 1.08 involves loading monsters and objects from the description files parsed last week and inserting them into the game. In rlg327.cpp, I reverted the script to start the game rather than printing out the parsing results. The codebase for hw 1.08 is built on the post-hw 1.07 code drop from the professor. I did not modify the Makefile other than compiling object.o for the new objects class, so the execution is: "make" THEN "./rlg327" with any desired flag from previous weeks.

Added fields to npc class to hold new monster details. Modified gen_monster() to create monsters according to their details from the monster descriptions vector. In io.cpp, added to io_display() and io_display_no_fog() to print monsters according to their symbol and color. Defined and created an object class for instances to be placed on a dungeon map 2D array to be viewable to the PC and hold object details. Then, I made a create_object() function in the description class to become an object factory. In object.cpp, created gen_objects() to create 10 objects from the object descriptions vector according to their details. In io.cpp, added to io_display() and io_display_no_fog() to print objects according to their symbol and color. Also in io.cpp, added to io_display() and io_display_no_fog() to print characters, objects, and then terrain in that order. In new_dungeon_level() (move.cpp), added check to ensure unique monsters and artifact objects behave correctly. Used a vector in dungeon class for unique monsters and artifact objects to keep track of their single instantiations.
