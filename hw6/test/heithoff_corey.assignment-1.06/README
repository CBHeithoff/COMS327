Assignment 1.06 involves converting the entire game into C++ and implementing Fog of War along with two in-game cheats, a Fog of War toggle, and teleporting. The codebase for hw 1.06 is built on the post-hw 1.05 code drop from the professor. I didn't modify the Makefile, other than switching to using g++, so the execution is: "make" THEN "./rlg327 [-n|--nummon <number of monsters>]" along with the available -s, -l, -r, and -i flags.

Converting to C++ included adding the needed casts. Converting the dungeon, character, NPC, and PC structs into classes (NPC and PC inherit from character). Removed the original pointer relationship in character. Still malloc to the NPC pointer, although it is never used for the game logic because it was the best way to avoid double free errors when deleting the heap monsters with character_delete(). Declared all monsters to be characters but instantiated them as NPCs for inheritance. Did the same thing for the PC. With the changes to NPC and PC, I had to change how functions interacted with them in many spots throughout the code.

Implementated Fog of War by creating terrain_type_t map_seen[DUNGEON_Y][DUNGEON_X] in dungeon.h. Cells are filled with immutable rock (" ") by default. The 5 by 5 region of terrain around the PC is updated in map_seen after every move. Created io_display_dark() in io.cpp, to print the dungeon with the map_seen map. Only monsters in the 5 by 5 region are printed. "f" deactivates Fog of War fort he remainder of the turn.
Â 
Created teleporting cheat when the user presses 'g'. Created io_teleport_pc() in io.cpp, which handles the entire teleporting process. Moving the teleporting target pointer will call move_pc_teleport() in move.cpp, updates the PC location and reprints the dungeon with io_display_teleport() in io.cpp, a modified io_display to include th targeting pointer, "*". When the second 'g' is, teleport_pc() in the move.cpp will formally move the PC.