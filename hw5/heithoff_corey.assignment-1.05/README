Assignment 1.05 involves implementing map printing and updating character movements with the ncurses library rather than reprinting the entire dungeon map every PC turn, making the user control PC movements, displaying a monster list, and adding an exit button. The codebase for hw 1.05 is built on the post-hw 1.04 code drop from the professor. I didn't modify the Makefile, other than adding the "-lncurses" linker flag, so the execution is: "make" THEN "./rlg327 [-n|--nummon <number of monsters>]" along with the available -s, -l, -r, -i, and -d flags.

To use the ncurses library to print/update the dungeon map, I rewrote the render_dungeon() to print the dungeon map using ncurses, which is called at the start of the game. I made a render_cell_ncurses() to update individual dungeon cells, which is called after character movements. Instead of the PC following automated movement, I created pc_next_pos_input() to determine the PC/user's next move, which uses ncurses getch() to get input and a switch statement to process the needed action. The result of pc_next_pos_input() is validated to ensure the PC stays within valid dungeon spaces. When the PC takes a staircase, the dungeon is deleted while preserving the PC, a new dungeon is generated, the PC is reassigned, monsters are regenerated, and the updated dungeon is displayed. A monster list display was implemented to show active monsters and their relative positions to the PC. scroll_monster_list() prints monster information, starting from a scroll offset and continuing to either the last monster or the bottom of the terminal window. display_monster_list() is triggered when the user presses 'm', clearing the screen and calling scroll_monster_list() to display the list. While the list is open, the user can scroll using the up and down arrow keys, press escape to return to the dungeon view, or exit the program.

